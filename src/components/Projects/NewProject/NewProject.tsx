import React, { useState } from "react";
import "./NewProject.css";
import "../../../index.css";
import type { CascaderProps, UploadProps } from "antd";
import {
  AutoComplete,
  Button,
  Cascader,
  Checkbox,
  Col,
  DatePicker,
  Form,
  Input,
  InputNumber,
  Rate,
  Row,
  Select,
  Tag,
  Upload,
  message,
} from "antd";
import {
  SyncOutlined,
  TagOutlined,
  TeamOutlined,
  UploadOutlined,
} from "@ant-design/icons";
import locale from "antd/es/date-picker/locale/ru_RU";

import "dayjs/locale/ru";

const { RangePicker } = DatePicker;

const { Option } = Select;

interface DataNodeType {
  value: string;
  label: string;
  children?: DataNodeType[];
}

const residences: CascaderProps<DataNodeType>["options"] = [
  {
    value: "zhejiang",
    label: "Zhejiang",
    children: [
      {
        value: "hangzhou",
        label: "Hangzhou",
        children: [
          {
            value: "xihu",
            label: "West Lake",
          },
        ],
      },
    ],
  },
  {
    value: "jiangsu",
    label: "Jiangsu",
    children: [
      {
        value: "nanjing",
        label: "Nanjing",
        children: [
          {
            value: "zhonghuamen",
            label: "Zhong Hua Men",
          },
        ],
      },
    ],
  },
];

const formItemLayout = {
  labelCol: {
    xs: { span: 24 },
    sm: { span: 8 },
  },
  wrapperCol: {
    xs: { span: 24 },
    sm: { span: 16 },
  },
};

const tailFormItemLayout = {
  wrapperCol: {
    xs: {
      span: 24,
      offset: 0,
    },
    sm: {
      span: 16,
      offset: 8,
    },
  },
};

const NewProject: React.FC = () => {
  const [form] = Form.useForm();
  const [priorityValue, setPriorityValue] = useState(0);

  const onFinish = (values: any) => {
    console.log("–ü–æ–ª—É—á–µ–Ω—ã –∑–Ω–∞—á–µ–Ω–∏—è —Ñ–æ—Ä–º—ã: ", values);
  };

  const prefixSelector = (
    <Form.Item name="prefix" noStyle>
      <Select style={{ width: 70 }}>
        <Option value="86">+86</Option>
        <Option value="87">+87</Option>
      </Select>
    </Form.Item>
  );
  const onUploadChange: UploadProps["onChange"] = (info) => {
    if (info.file.status !== "uploading") {
      console.log(info.file, info.fileList);
    }
    if (info.file.status === "done") {
      message.success(`${info.file.name} file uploaded successfully`);
    } else if (info.file.status === "error") {
      message.error(`${info.file.name} file upload failed.`);
    }
  };

  // const suffixSelector = (
  //   <Form.Item name="suffix" noStyle>
  //     <Select style={{ width: 70 }}>
  //       <Option value="USD">$</Option>
  //       <Option value="CNY">¬•</Option>
  //     </Select>
  //   </Form.Item>
  // );

  const [autoCompleteResult, setAutoCompleteResult] = useState<string[]>([]);

  return (
    <Form
      {...formItemLayout}
      form={form}
      name="new_project"
      onFinish={onFinish}
      initialValues={{
        residence: ["zhejiang", "hangzhou", "xihu"],
        prefix: "86",
      }}
      style={{ maxWidth: 700, marginLeft: "10px" }}
      scrollToFirstError
    >
      {/* <Form.Item
        name="email"
        label="–ü–æ—á—Ç–∞"
        rules={[
          {
            type: "email",
            message: "The input is not valid E-mail!",
          },
          {
            required: true,
            message: "Please input your E-mail!",
          },
        ]}
      >
        <Input />
      </Form.Item> */}

      <Form.Item
        name="name"
        label="–ò–º—è –ø—Ä–æ–µ–∫—Ç–∞"
        rules={[
          {
            required: true,
            message: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞!",
            whitespace: true,
          },
        ]}
      >
        <Input placeholder="–ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç" prefix={<TagOutlined />} />
      </Form.Item>

      <Form.Item
        name="parent_component"
        label="–†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç"
        rules={[
          {
            required: false,
            message: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞!",
            whitespace: true,
          },
        ]}
      >
        <Select placeholder="–ö–æ–º–ø–æ–Ω–µ–Ω—Ç">
          <Option value="1">–ü—Ä–æ–µ–∫—Ç 1</Option>
          <Option value="2">–ü—Ä–æ–µ–∫—Ç 2</Option>
          <Option value="3">–ü—Ä–æ–µ–∫—Ç 3</Option>
        </Select>
      </Form.Item>

      <Form.Item
        name="type"
        label="–¢–∏–ø —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"
        rules={[
          {
            required: true,
            message: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–∏–ø —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏!",
            whitespace: true,
          },
        ]}
      >
        <Select placeholder="–ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –æ–±–æ—Ä–æ–Ω—ã">
          <Option value="min_oborony">–ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –æ–±–æ—Ä–æ–Ω—ã</Option>
          <Option value="FSTEK">–§–°–¢–≠–ö</Option>
          <Option value="fsb">–§–°–ë</Option>
        </Select>
      </Form.Item>

      <Form.Item
        name="company"
        label="–ö–æ–º–ø–∞–Ω–∏—è"
        rules={[
          {
            required: true,
            message: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏!",
            whitespace: true,
          },
        ]}
      >
        <Input placeholder="–û–û–û –î–ê–ê–ê" />
      </Form.Item>

      <Form.Item
        name="priority"
        label="–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç"
        rules={[
          {
            required: true,
            message: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç!",
          },
        ]}
      >
        <Rate
          value={priorityValue}
          onChange={setPriorityValue}
          character="ü•ë"
        />
      </Form.Item>

      <Form.Item
        // name="decision"
        label="–†–µ—à–µ–Ω–∏–µ"
        style={{
          marginBottom: "0",
        }}
      >
        <Form.Item
          name="decision"
          rules={[
            {
              required: true,
              message: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ä–µ—à–µ–Ω–∏–µ!",
            },
          ]}
          style={{
            display: "inline-block",
            width: "calc(50% - 5px)",
          }}
        >
          <Input placeholder="–†–µ—à–µ–Ω–∏–µ ‚Ññ 111 –æ—Ç 01.01.2001 –≥." />
        </Form.Item>
        <span
          style={{
            display: "inline-block",
            width: "10px",
            lineHeight: "12px",
            textAlign: "center",
          }}
        ></span>
        <Form.Item
          style={{
            display: "inline-block",
            width: "calc(50% - 5px)",
          }}
        >
          <Upload
            name="file"
            action="https://run.mocky.io/v3/435e224c-44fb-4773-9faf-380c5e6a2188"
            onChange={onUploadChange}
          >
            <Button icon={<UploadOutlined />}>–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ—à–µ–Ω–∏–µ</Button>
          </Upload>
        </Form.Item>
      </Form.Item>

      <Form.Item
        name="trust_level"
        label="–£—Ä–æ–≤–µ–Ω—å –¥–æ–≤–µ—Ä–∏—è"
        style={{
          marginTop: "5px",
        }}
        rules={[
          {
            required: true,
            message: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –¥–æ–≤–µ—Ä–∏—è (–ù–î–í, –ù–°–î, –†–î–í)!",
            whitespace: true,
          },
        ]}
      >
        <Input placeholder="2:–ù–î–í, 3:–†–î–í" />
      </Form.Item>

      <Form.Item
        name="experts"
        label="–ó–∞–¥–µ–π—Å—Ç–≤–æ–≤–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–µ—Ä—Ç—ã"
        rules={[
          {
            required: true,
            message: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–¥–µ–π—Å—Ç–≤–æ–≤–∞–Ω–Ω—ã—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤!",
          },
        ]}
      >
        <Select
          mode="multiple"
          allowClear
          style={{ width: "100%" }}
          placeholder="–ó–∞–¥–µ–π—Å—Ç–≤–æ–≤–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–µ—Ä—Ç—ã"
          //   onChange={handleChange}
          options={[
            { value: "–ö—É—Ä–±–∞–Ω–æ–≤", label: "–ö—É—Ä–±–∞–Ω–æ–≤ –ú.–ù." },
            { value: "–ï–≤–¥–æ–∫–∏–º–æ–≤–∞", label: "–ï–≤–¥–æ–∫–∏–º–æ–≤–∞ –ö.–õ." },
            { value: "–•–∞—Ä—á–µ–Ω–∫–æ", label: "–•–∞—Ä—á–µ–Ω–∫–æ –ê.–°." },
            { value: "–ü—Ä–æ—à–∏–Ω–∞", label: "–ü—Ä–æ—à–∏–Ω–∞ –ê.–û." },
            { value: "–ê–ª–µ–∫—Å–µ–µ–≤", label: "–ê–ª–µ–∫—Å–µ–µ–≤ –ï. –°." },
          ]}
        />
      </Form.Item>
      {/* <Tag icon={<SyncOutlined spin />} color="processing">
        processing
      </Tag> */}
      <Form.Item
        name="status"
        label="–°—Ç–∞—Ç—É—Å —Ä–∞–±–æ—Ç—ã"
        // rules={[
        //   {
        //     required: true,
        //     message: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Å—Ç–∞—Ç—É—Å —Ä–∞–±–æ—Ç—ã!",
        //     whitespace: true,
        //   },
        // ]}
      >
        <Select placeholder="–í —Ä–∞–±–æ—Ç–µ">
          <Option value="on_work">–í —Ä–∞–±–æ—Ç–µ</Option>
          <Option value="wait_materials">
            –û–∂–∏–¥–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
          </Option>
          <Option value="documentation_analysing">–ê–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏</Option>
        </Select>
      </Form.Item>

      <Form.Item
        label="–°—Ä–æ–∫–∏ –ø—Ä–æ–≤–µ–¥–Ω–∏—è —Ä–∞–±–æ—Ç—ã"
        rules={[
          {
            required: true,
            message: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–¥–µ–π—Å—Ç–≤–æ–≤–∞–Ω–Ω—ã—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤!",
          },
        ]}
      >
        <RangePicker locale={locale} />
      </Form.Item>

      <Form.Item
        name="sources"
        label="–ò—Å—Ö–æ–¥–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã"
        // rules={[
        //   {
        //     required: true,
        //     message: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –∫–∞—Ç–∞–ª–æ–≥ —Å –∏—Å—Ö–æ–¥–Ω—ã–º–∏ —Ç–µ–∫—Å—Ç–∞–º–∏!",
        //   },
        // ]}
      >
        <Input />
      </Form.Item>

      <Form.Item
        name="distributives"
        label="–î–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤—ã"
        // rules={[
        //   {
        //     required: true,
        //     message: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤—ã!",
        //     whitespace: true,
        //   },
        // ]}
      >
        <Input />
      </Form.Item>

      <Form.Item
        name="documentation"
        label="–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"
        // rules={[
        //   {
        //     required: true,
        //     message: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é!",
        //     whitespace: true,
        //   },
        // ]}
      >
        <Input />
      </Form.Item>

      <Form.Item
        name="reports"
        label="–û—Ç—á–µ—Ç–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã"
        rules={[
          {
            required: true,
            message: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –æ—Ç—á–µ—Ç–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã!",
            whitespace: true,
          },
        ]}
      >
        <Input />
      </Form.Item>

      {/* <Form.Item
        name="residence"
        label="Habitual Residence"
        rules={[
          {
            type: "array",
            required: true,
            message: "Please select your habitual residence!",
          },
        ]}
      >
        <Cascader options={residences} />
      </Form.Item> */}

      {/* <Form.Item
        name="phone"
        label="Phone Number"
        rules={[{ required: true, message: "Please input your phone number!" }]}
      >
        <Input addonBefore={prefixSelector} style={{ width: "100%" }} />
      </Form.Item>

      <Form.Item
        name="donation"
        label="Donation"
        rules={[{ required: true, message: "Please input donation amount!" }]}
      >
        <InputNumber addonAfter={suffixSelector} style={{ width: "100%" }} />
      </Form.Item>

      <Form.Item
        name="website"
        label="Website"
        rules={[{ required: true, message: "Please input website!" }]}
      >
        <AutoComplete placeholder="website">
          <Input />
        </AutoComplete>
      </Form.Item>

      <Form.Item
        name="intro"
        label="Intro"
        rules={[{ required: true, message: "Please input Intro" }]}
      >
        <Input.TextArea showCount maxLength={100} />
      </Form.Item>

      <Form.Item
        name="gender"
        label="Gender"
        rules={[{ required: true, message: "Please select gender!" }]}
      >
        <Select placeholder="select your gender">
          <Option value="male">Male</Option>
          <Option value="female">Female</Option>
          <Option value="other">Other</Option>
        </Select>
      </Form.Item> */}

      {/* <Form.Item
        name="website"
        label="Website"
        rules={[{ required: true, message: "Please input website!" }]}
      >
        <AutoComplete placeholder="website">
          <Input />
        </AutoComplete>
      </Form.Item>

      <Form.Item
        name="intro"
        label="Intro"
        rules={[{ required: true, message: "Please input Intro" }]}
      >
        <Input.TextArea showCount maxLength={100} />
      </Form.Item> */}

      <Form.Item {...tailFormItemLayout}>
        <Button type="primary" htmlType="submit">
          –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç
        </Button>
      </Form.Item>
    </Form>
  );
};

export default NewProject;
